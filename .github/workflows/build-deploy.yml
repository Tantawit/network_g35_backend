name: Build and Deploy

on:
  push:
    branches:
      - dev
      - beta

env:
  GITOPS_REPO: 2110336-2565-2/sec3-group15-cu-freelance-gitops
  GITOPS_APPLICATION_NAME: chat

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          check-latest: true
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Vet
        run: |
          go vet ./...

      - name: Test
        run: |
          go test  -v -coverpkg ./src/internal/... -coverprofile coverage.out -covermode count ./src/internal/...
          go tool cover -func="./coverage.out"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - test

    permissions:
      contents: read
      packages: write

    outputs:
      IMAGE_TAG: ${{ steps.env.outputs.IMAGE_TAG }}
      IMAGE_NAME: ${{ steps.env.outputs.IMAGE_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set environment
        id: env
        run: |
          echo "IMAGE_NAME=ghcr.io/${{ github.repository }}" >> $GITHUB_ENV
          echo "GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
          echo "IMAGE_NAME=ghcr.io/${{ github.repository }}" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT

      - name: Log in to the Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.GIT_HASH }},${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - test
      - build

    steps:
      #      - name: Starting Build & Push Status Slack Notification
      #        uses: ravsamhq/notify-slack-action@v2
      #        if: always()
      #        with:
      #          status: ${{ job.status }}
      #          token: ${{ secrets.GITHUB_TOKEN }}
      #          notification_title: "Starting Build {BUILD_NUMBER}"
      #          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
      #          footer: "Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>"
      #          notify_when: "failure, success, warning"
      #          env:
      #            SLACK_WEBHOOK_URL: ${{ secrets.GITOPS_SLACK_API }}

      - uses: actions/checkout@v3
        with:
          repository: ${{ env.GITOPS_REPO }}
          token: ${{ secrets.GH_PAT }}

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Update image version
        working-directory:  ${{ env.GITOPS_APPLICATION_NAME }}/overlays/${{ github.ref_name }}
        run: |
          kustomize edit set image ${{ needs.build.outputs.IMAGE_NAME }}=${{ needs.build.outputs.IMAGE_NAME }}:${{ needs.build.outputs.IMAGE_TAG }}

      - name: Commit and push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GH_PAT }}
          message: "chore: set `${{ env.GITOPS_APPLICATION_NAME }}` image tag to `${{ needs.build.outputs.IMAGE_TAG }}` in `${{ github.ref_name }}`"
          repository: ${{ env.GITOPS_REPO }}
          force: true
          branch: master
